name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            services/api-worker/package-lock.json
            services/api-worker/package.json

      - name: Install Node deps
        working-directory: services/api-worker
        run: npm ci

      - name: Typecheck (tsc)
        working-directory: services/api-worker
        run: npm run check

      - name: Run vitest
        working-directory: services/api-worker
        run: npm test --silent

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        working-directory: backend/flask-app
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Run pytest
        working-directory: backend/flask-app
        run: pytest -q

      - name: OpenAPI Lint
        run: npx -y @redocly/cli@latest lint services/api-worker/openapi.json

  deploy-staging:
    name: Deploy API Worker (staging)
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: staging
      url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy with Wrangler (staging)
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: services/api-worker
          # Uses wrangler.toml and env.staging
          command: deploy --env=staging
